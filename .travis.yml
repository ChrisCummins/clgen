# build environment
#
# We need the extra RAM that a non-container build gives us.
#
# See: https://docs.travis-ci.com/user/ci-environment/
sudo: required

language: python

python:
  - "2.7"
  - "3.4"
  - "3.5"

cache:
  directories:
    - .cache
    - native/cmake
    - native/libclc
    - native/llvm
    - native/ninja

addons:
  apt:
    sources:
      - llvm-toolchain-precise-3.7
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.8
      - g++-4.8
      - clang-3.6
      - libhdf5-serial-dev
      - python-dev

env:
  global:
    - CC=clang
    - CXX=clang++

before_install:
  - pip install --upgrade pip
  - pip install coveralls
  - sudo apt-get update -qq

# A clean Travis CI build will timeout after 50 minutes and fail. Irritatingly,
# this means that the caches are not updated, so we can't incrementally build
# the project by restarting the job. The workaround is to kill the build after
# a time limit and then restart the job by hand:
#
# install:  # cache cold (runs build in 30min chunks, restart job until complete)
#   - ./configure -b
#   - timeout 1800 make all || true
#   - touch NORUN
#
install:  # cache hot
  - pip install 'protobuf==3.1.0'
  - pip install tensorflow
  - apt-cache policy libc6
  - ldd --version
  - sudo apt-get install libc6
  - ldd --version
  - python -c 'import tensorflow as tf; print("tensorflow:", tf.__version__)'
  - ./configure -b
  - make all
  - make install

script:
  - export CC='gcc'
  - export CXX='g++'
  - test -f NORUN || coverage run --source=clgen ./setup.py test

after_success:
  - test -f NORUN || coveralls

notifications:
  email:
    on_success: always # [always|never|change]
    on_failure: always # [always|never|change]
