#!/usr/bin/env python2.7
from __future__ import print_function

import json
import os
import subprocess
import sys

from argparse import ArgumentParser


def to_text(val):
    return "yes" if val else "no"


def json_to_stream(blob, stream):
    json.dump(blob, stream, sort_keys=True, indent=4,
              separators=(',', ': '))
    print("", file=stream)


def main():
    parser = ArgumentParser(description="Configure DeepSmith build.")
    parser.add_argument("-r", "--reconfigure", action="store_true",
                        help="re-run configuraiton using previous settings")
    cwd = os.path.dirname(os.path.realpath(__file__))
    parser.add_argument("--dotfiles", metavar="<path>", default=cwd,
                        help="path to dotfiles directory (default: {})".format(cwd))
    default_private = os.path.expanduser("~/Dropbox/Shared")
    parser.add_argument("--private", metavar="<path>", default=default_private,
                        help="path to private directory (default: {})".format(default_private))
    parser.add_argument("--apple-id", metavar="<email>",
                        help="Apple ID (e.g. example@email.com)")
    args = parser.parse_args()

    cfg = {
        "dotfiles": args.dotfiles,
        "private": args.private,
        "apple_id": args.apple_id,
    }

    if args.reconfigure and os.path.exists(os.path.join(cfg["dotfiles"], ".config.json")):
        try:
            with open(os.path.join(cfg["dotfiles"], ".config.json")) as infile:
                cfg = json.loads(infile.read())
        except OSError:
            print("You must run ./configure first before you can use "
                  "the `-r` flag.", file=sys.stderr)
            sys.exit(1)

    # generate JSON config file
    with open(os.path.join(cfg["dotfiles"], "config.json"), "w") as outfile:
        json_to_stream(cfg, outfile)

    # print configuration
    json_to_stream(cfg, sys.stdout)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\naborting without writing changes", file=sys.stderr)
        sys.exit(1)
